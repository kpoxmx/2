local fov = 100
local maxDistance = 50
local maxTransparency = 0.1
local teamCheck = false

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Cam = workspace.CurrentCamera
local FOVring = Drawing.new("Circle")

FOVring.Visible = true
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local function updateDrawings()
    FOVring.Position = Cam.ViewportSize / 2
end

local function lookAt(target)
    local lookVector = (target - Cam.CFrame.Position).unit
    Cam.CFrame = CFrame.new(Cam.CFrame.Position, Cam.CFrame.Position + lookVector)
end

local function calculateTransparency(distance)
    return (1 - (distance / fov)) * maxTransparency
end

local function isPlayerAlive(player)
    local character = player.Character
    return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
end

local function getClosestPlayerInFOV(trg_part)
    local nearest, last = nil, math.huge
    local playerMousePos = Cam.ViewportSize / 2
    local localPlayer = Players.LocalPlayer

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and (not teamCheck or player.Team ~= localPlayer.Team) and isPlayerAlive(player) then
            local part = player.Character and player.Character:FindFirstChild(trg_part)
            if part then
                local ePos, isVisible = Cam:WorldToViewportPoint(part.Position)
                local distance = (Vector2.new(ePos.X, ePos.Y) - playerMousePos).Magnitude

                if distance < last and isVisible and distance < fov and distance < maxDistance then
                    last = distance
                    nearest = player
                end
            end
        end
    end
    return nearest
end

-- 自動でオートエイムを開始
RunService:BindToRenderStep("AutoAim", Enum.RenderPriority.Camera.Value, function()
    updateDrawings()
    local closest = getClosestPlayerInFOV("Head")

    if closest and closest.Character and closest.Character:FindFirstChild("Head") then
        lookAt(closest.Character.Head.Position)
    end

    if closest then
        local ePos, isVisible = Cam:WorldToViewportPoint(closest.Character.Head.Position)
        local distance = (Vector2.new(ePos.X, ePos.Y) - (Cam.ViewportSize / 2)).Magnitude
        FOVring.Transparency = calculateTransparency(distance)
    else
        FOVring.Transparency = maxTransparency
    end
end)
